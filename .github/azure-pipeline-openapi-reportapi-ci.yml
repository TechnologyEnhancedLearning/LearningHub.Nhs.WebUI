# Agent Queue 'Azure Pipelines' was used with unrecognized Agent Specification, vmImage property must be specified to determine image - https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#software
variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.projects
  value: '**/*.csproj'
trigger:
  branches:
    include: 
      - CI
    exclude:
      - '*'
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/RC
jobs:
- job: Job_1
  displayName: Agent job
  pool:
    vmImage: windows-latest
  steps:
  - checkout: self
    clean: true
    fetchTags: false
  - task: NuGetToolInstaller@1
    displayName: Use NuGet 5.8
    inputs:
      versionSpec: 5.8
  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      feedRestore: d99eaf2c-ad74-4a35-876e-f7dc1e45a604
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
      feedRestore: d99eaf2c-ad74-4a35-876e-f7dc1e45a604
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: $(BuildParameters.projects)
      arguments: --configuration $(BuildConfiguration) /p:Platform=x64
  - task: DotNetCoreCLI@2
    displayName: Test OpenAPI
    inputs:
      command: test
      projects: '**/*LearningHub.Nhs.OpenApi.Tests.csproj'
      arguments: --configuration Debug
  - task: DotNetCoreCLI@2
    displayName: Test ReportAPI
    inputs:
      command: test
      projects: '**/*LearningHub.Nhs.ReportApi.Services.UnitTests.csproj'
      arguments: --configuration Debug
  - task: DotNetCoreCLI@2
    displayName: Publish OpenAPI
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/*LearningHub.NHS.OpenAPI.csproj'
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/OpenAPI
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact OpenAPI
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/OpenAPI
      ArtifactName: OpenAPI
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - task: DotNetCoreCLI@2
    displayName: Publish ReportAPI
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/*LearningHub.Nhs.ReportApi.csproj'
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/ReportAPI
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact ReportAPI
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)/ReportAPI
      ArtifactName: ReportAPI
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
...
