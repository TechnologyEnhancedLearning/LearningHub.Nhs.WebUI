@model LearningHub.Nhs.Models.Catalogue.CatalogueViewModel
@using LearningHub.Nhs.Models.Enums

@{
  ViewData["Title"] = "Catalogue user groups";
  var catalogueName = (string)ViewData["CatalogueName"];
}

@section SideMenu {
  @{
    await Html.RenderPartialAsync("_NavSection");
  }
}

<div id="alertInfo" class="alert alert-dismissible fade show admin-alert mb-0 mt-5" role="alert" style="display:none;">
  <span id="alertText"></span>
  <button type="button" class="close" data-hide="alert" aria-label="Close">
    <span aria-hidden="true">&times;</span>
  </button>
</div>

<h1 class="ml-5 mt-5" id="catalogue-name-header">@catalogueName</h1>
@{
  await Html.RenderPartialAsync("_CatalogueNav.cshtml", new CatalogueNavViewModel { Page = CatalogueNavPage.UserGroups, CatalogueId = (int)ViewData["id"] });
}

<div class="panel-body admin-body">

  <input id="NodeId" name="NodeId" value="@Model.NodeId" type="hidden" />

  <div id="tabsbar-sub">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
      <li class="tab-item-small" style="margin-left:30px">
        <a class="tab-link active" id="admins-tab" data-toggle="tab" href="#admins" role="tab" aria-controls="admins" aria-selected="true">Local admins</a>
      </li>
      <li class="tab-item-small">
        <a class="tab-link" id="editors-tab" data-toggle="tab" href="#editors" role="tab" aria-controls="editors" aria-selected="false">Editors</a>
      </li>
      <li class="tab-item-small">
        <a class="tab-link" id="creators-tab" data-toggle="tab" href="#creators" role="tab" aria-controls="creators" aria-selected="false">Course Creator</a>
      </li>
      <li class="tab-item-small">
        <a class="tab-link" id="readers-tab" data-toggle="tab" href="#readers" role="tab" aria-controls="readers" aria-selected="false">Restricted Access</a>
      </li>
      <li class="tab-item-small">
        <a class="tab-link" id="reporters-tab" data-toggle="tab" href="#reporters" role="tab" aria-controls="reporters" aria-selected="false">Reporters</a>
      </li>
      <li class="tab-item-small">
        <a class="tab-link" id="preview-tab" data-toggle="tab" href="#preview" role="tab" aria-controls="preview" aria-selected="false">Preview</a>
      </li>
    </ul>
  </div>

  <div class="tab-content" id="myTabContent">

    <div class="tab-pane fade show active" id="admins" role="tabpanel" aria-labelledby="admins-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Local Admin role can manage access requests, add and remove users in a restricted catalogue.</div>
        <div id="adminUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>

    <div class="tab-pane fade" id="editors" role="tabpanel" aria-labelledby="editors-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Editor role can Add, Edit, Publish or Unpublish resources within a catalogue.</div>
        <div id="editorUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>
    <div class="tab-pane fade" id="creators" role="tabpanel" aria-labelledby="creators-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Course Creator role can Add, Edit, Publish or Unpublish and change the structure of a course within a catalogue.</div>
        <div id="creatorsUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>
    <div class="tab-pane fade" id="readers" role="tabpanel" aria-labelledby="readers-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Restricted Access role can view resources within a restricted catalogue.</div>
        <div id="readerUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>

    <div class="tab-pane fade" id="reporters" role="tabpanel" aria-labelledby="reporters-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Reporter role can have access to tableau reporting.</div>
        <div id="reportersUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>

    <div class="tab-pane fade" id="preview" role="tabpanel" aria-labelledby="preview-tab">
      <div class="admin-section pt-0 pl-0">
        <div class="catalogue-role-description">Users that are added to the Previewer role are able to preview hidden catalogues.</div>
        <div id="previewUserGroupList" class="catalogue-user-group-list"><i class="fa fa-spinner fa-spin ml-4"></i></div>
      </div>
    </div>

    <div id="removeRoleUserGroup" ref="removeRoleUserGroupModal" class="modal remove-role-user-group-modal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboad="false">
      <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
          <div class="modal-header text-center">
            <h2 class="heading-lg w-100"><i class="fas fa-exclamation-triangle mr-2"></i>Remove user group</h2>
          </div>

          <div class="modal-body">
            <div id="removeUserGroupMessage" class="mt-3"></div>
          </div>

          <div class="modal-footer">
            <div class="form-group col-12 p-0 m-0">
              <div class="d-flex">
                <input type="button" class="btn btn-admin btn-cancel" data-dismiss="modal" value="Cancel" />
                <input type="button" class="btn btn-custom-green ml-auto" onclick="removeRoleUserGroup()" value="Continue" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div id="addUserGroup" ref="addUserGroupModal" class="modal add-user-group-modal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboad="false">
      <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content px-0">
          <div class="modal-header py-0">
            <h2 class="heading-lg w-100 mb-0">Add user groups</h2>
          </div>

          <div class="modal-body p-0">
            <div id="addUserGroupList"><i class="fa fa-spinner fa-spin ml-4"></i></div>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>

@section Scripts{
  <script src="~/js/pagingContol.js"></script>
  <script src="~/js/pagingContolModal.js"></script>
  <script type="text/javascript">
    var selectedRole;
    var selectedUserGroupIdList = [];

    function showSuccessAlert(alertText) {
      $('#alertText')
        .html(alertText)
      $('#alertInfo')
        .removeClass("alert-danger")
        .addClass("alert-success")
        .show();
    }

    function showErrorAlert(alertText) {
      $('#alertText')
        .html(alertText)
      $('#alertInfo').removeClass("alert-success")
        .addClass("alert-danger")
        .show();
    }

    function pagingAjax_PageChanged() {
      $('.remove-role-user-group').on('click', function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass('remove-role-user-group-selection');
        showRemoveUserGroupModal();
      });
      markUserGroupSelection();
    }

    function loadRoleUserGroups(roleId) {
      selectedRole = roleId;
      var nodeId = $('#NodeId').val();

      var roleUserGroupList = ""
      $("#adminUserGroupList").html('');
      $("#editorUserGroupList").html('');
      $("#creatorsUserGroupList").html('');
      $("#readerUserGroupList").html('');
      $("#reportersUserGroupList").html('');
      $("#previewUserGroupList").html('');

      if (roleId == @((int)RoleEnum.LocalAdmin)) {
        roleUserGroupList = "#adminUserGroupList";
      }
      if (roleId == @((int)RoleEnum.Editor)) {
        roleUserGroupList = "#editorUserGroupList";
      }
      if (roleId == @((int)RoleEnum.CourseCreator)) {
        roleUserGroupList = "#creatorsUserGroupList";
      }
      if (roleId == @((int)RoleEnum.Reader)) {
        roleUserGroupList = "#readerUserGroupList";
      }
      if (roleId == @((int)RoleEnum.Reporter)) {
        roleUserGroupList = "#reportersUserGroupList";
      }
      if (roleId == @((int)RoleEnum.Previewer)) {
        roleUserGroupList = "#previewUserGroupList";
      }
      $.ajax({
        cache: false,
        type: "GET",
        url: "/Catalogue/RoleUserGroupList/" + roleId.toString() + '/' + nodeId,
        success: function (data) {

          $(roleUserGroupList).html(data);

          var presetFilter = [{ "Column": "roleId", "Value": roleId }, { "Column": "cataloguenodeid", "Value": nodeId }];
          AdminUI.pagingSetupAjax('', '', '', presetFilter, 'Catalogue/RoleUserGroupList', roleUserGroupList);

          $('.remove-role-user-group').on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.addClass('remove-role-user-group-selection');
            showRemoveUserGroupModal();
          });
        },
        error: function () {
          showErrorAlert("Error loading role user groups");
        }
      });
    }

    function showRemoveUserGroupModal() {
      if (selectedRole == @((int)RoleEnum.LocalAdmin)) {
        $('#removeUserGroupMessage').html("This user group will no longer be a catalogue administrator for this catalogue.");
      }
      if (selectedRole == @((int)RoleEnum.Editor)) {
        $('#removeUserGroupMessage').html("This user group has the role of editor. Users of the group will no longer be able to edit the catalogue.");
      }
      if (selectedRole == @((int)RoleEnum.CourseCreator)) {
        $('#removeUserGroupMessage').html("This user group has the role of course creator. Users of the group will no longer be able to Add, Edit, Publish or Unpublish and change the structure of a course within a catalogue.");
      }
      if (selectedRole == @((int)RoleEnum.Reader)) {
        $('#removeUserGroupMessage').html("This user group will no longer be able to see the catalogue resources because the catalogue is restricted access.");
      }
      if (selectedRole == @((int)RoleEnum.Reporter)) {
        $('#removeUserGroupMessage').html("This user group will no longer have access to Tableau reporting.");
      }
      if (selectedRole == @((int)RoleEnum.Previewer)) {
        $('#removeUserGroupMessage').html("This user group will no longer be able to preview hidden catalogues.");
      }

      $('#removeRoleUserGroup').modal('show');
    }

    function showAddUserGroupsModal() {
      var nodeId = $('#NodeId').val();

      $.ajax({
        cache: false,
        type: "GET",
        url: "/Catalogue/SelectUserGroupList/" + selectedRole.toString() + '/' + nodeId,
        success: function (data) {
          $('#addUserGroupList').html(data);

          var presetFilter = [{ "Column": "roleid_exclude", "Value": selectedRole }, { "Column": "cataloguenodeid_exclude", "Value": nodeId }];
          AdminUIModal.pagingSetupAjax('Id', 'A', '', presetFilter, 'Catalogue/SelectUserGroupList', '#addUserGroupList');

          $('#addUserGroup').modal('show');
        },
        error: function () {
          showErrorAlert("Error loading user groups");
        }
      });
    }

    function removeRoleUserGroup() {

      var selected = $(".remove-role-user-group-selection").first();
      id = selected.data('id');

      $.ajax({
        cache: false,
        type: "POST",
        url: "/UserGroup/RemoveRoleUserGroup",
        data: { roleUserGroupId: id },
        success: function (data) {
          if (data.success) {
            loadRoleUserGroups(selectedRole);
            $('#removeRoleUserGroup').modal('hide');
          }
          else {
            $('#removeRoleUserGroup').modal('hide');
            showErrorAlert(data.details);
          }
        },
        error: function () {
          showErrorAlert('Unexpected error performing action: Remove Role User Group.');
        }
      });
    }

    function markUserGroupSelection() {
      selectedUserGroupIdList.forEach(function (userGroupId) {
        if ($('#userGroup_' + userGroupId) !== undefined) {
          $('#userGroup_' + userGroupId).prop('checked', true);
        }
      });
    }

    function handleUserGroupSelection(id) {
      var userGroupId = id.replace("userGroup_", "");
      let index = selectedUserGroupIdList.indexOf(userGroupId);
      if ($('#' + id).is(":checked")) {
        if (index == -1) {
          selectedUserGroupIdList.push(userGroupId);
        }
      } else {
        if (index >= 0) {
          selectedUserGroupIdList.splice(index, 1)
        }
      }
    }

    function addSelectedUserGroupsToCatalogue() {
      var nodeId = $('#NodeId').val();

      if (selectedUserGroupIdList.length > 0) {
        $.ajax({
          cache: false,
          type: "POST",
          url: "/Catalogue/AddUserGroupsToCatalogue",
          data: { catalogueNodeId: nodeId, roleId: selectedRole, userGroupIdList: selectedUserGroupIdList.toString() },
          success: function (data) {
            if (data.success) {
              loadRoleUserGroups(selectedRole);
              selectedUserGroupIdList = [];
            }
            else {
              showErrorAlert(data.details);
            }
            $('#addUserGroup').modal('hide');
          },
          error: function () {
            showErrorAlert('Unexpected error performing action: Add Users to User Group.');
          }
        });
      }
    }

    $(function () {

      $(function () {
        $("[data-hide]").on("click", function () {
          $(this).closest("." + $(this).attr("data-hide")).hide();
        });
      });

      $('#myTab a[href="#admins"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.LocalAdmin));
      });

      $('#myTab a[href="#editors"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.Editor));
      });

      $('#myTab a[href="#creators"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.CourseCreator));
      });

      $('#myTab a[href="#readers"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.Reader));
      });

      $('#myTab a[href="#reporters"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.Reporter));
      });

      $('#myTab a[href="#preview"]').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
        loadRoleUserGroups(@((int)RoleEnum.Previewer));
      });

      loadRoleUserGroups(@((int)RoleEnum.LocalAdmin));
    });
  </script>
}