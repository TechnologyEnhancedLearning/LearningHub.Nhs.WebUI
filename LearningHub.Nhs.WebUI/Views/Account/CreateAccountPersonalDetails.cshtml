@model LearningHub.Nhs.WebUI.Models.Account.PersonalDetails
@using LearningHub.Nhs.WebUI.Models.Account;
@using Microsoft.Extensions.Options;
@using LearningHub.Nhs.WebUI.Configuration;
@inject IOptions<Settings> settings

@{
    ViewData["Title"] = "Personal details";
    string email = ViewBag.ValidatedEmail;
    var errorHasOccurred = !ViewData.ModelState.IsValid;
    AccountCreationTypeEnum accountCreationType = ViewBag.AccountCreationType;
    bool returnToConfirmation = false;
    if (!string.IsNullOrWhiteSpace(Context.Request.Query["returnToConfirmation"]))
    {
        bool.TryParse(Context.Request.Query["returnToConfirmation"].ToString(), out returnToConfirmation);
    }
    else
    {
        bool.TryParse(Model.ReturnToConfirmation.ToString(), out returnToConfirmation);
    }

}

@section styles{
    <link rel="stylesheet" type="text/css" href="~/css/nhsuk/pages/createaccount.css" asp-append-version="true" />
}
<div class="create-account">
    <div class="nhsuk-width-container app-width-container">
        <div class="nhsuk-grid-row">
            <div class="nhsuk-grid-column-full @(returnToConfirmation ? "nhsuk-u-padding-top-7":string.Empty)">
                @if (!returnToConfirmation && !Model.IsLoginWizard)
                {
                    @if (accountCreationType == AccountCreationTypeEnum.FullAccess)
                    {
                        <vc:back-link asp-controller="Account" asp-action="CreateAccountEmailVerification" link-text="Back to: Create an account" />
                    }
                    else
                    {
                        <vc:back-link asp-controller="Account" asp-action="CreateAccountGeneralUserConfirmation" link-text="Back to: General user account" />
                    }
                }
                else
                {
                    <div class="nhsuk-u-padding-top-7"></div>
                }
                <h1 class="nhsuk-heading-xl">Enter your personal details</h1>

                <form class="nhsuk-u-margin-bottom-2" asp-controller="Registration" asp-action="CreateAccountPersonalDetails" method="post">
                    <input type="hidden" name="formSubmission" value="true">
                    @if (errorHasOccurred)
                    {
                        <vc:error-summary order-of-property-names="@(new[] { nameof(Model) })" />
                    }

                    <vc:text-input asp-for="FirstName"
                                   label="First name"
                                   populate-with-current-value="true"
                                   type="text"
                                   spell-check="false"
                                   hint-text=""
                                   autocomplete="off"
                                   css-class="nhsuk-u-width-one-half"
                                   required="true"
                                   required-client-side-error-message="Enter a first name" />

                    <vc:text-input asp-for="LastName"
                                   label="Last name"
                                   populate-with-current-value="true"
                                   type="text"
                                   spell-check="false"
                                   hint-text=""
                                   autocomplete="off"
                                   css-class="nhsuk-u-width-one-half"
                                   required="true"
                                   required-client-side-error-message="Enter a last name" />

                    <vc:text-input asp-for="SecondaryEmailAddress"
                                   label="Secondary email address"
                                   populate-with-current-value="true"
                                   type="text"
                                   spell-check="false"
                                   hint-text=""
                                   autocomplete="email"
                                   css-class="nhsuk-u-width-one-half"
                                   required="false" />

                    <input type="hidden" name="returnToConfirmation" value="@returnToConfirmation.ToString()">
                    <input type="hidden" name="PrimaryEmailAddress" value="@Model.PrimaryEmailAddress">
                    <button class="nhsuk-button" type="submit">Continue</button>

                </form>
                <details class="nhsuk-details nhsuk-expander nhsuk-u-margin-bottom-9 nhsuk-u-reading-width">
                    <summary class="nhsuk-details__summary">
                        <span class="nhsuk-details__summary-text">
                            Why should I provide a secondary email address?
                        </span>
                    </summary>
                    <div class="nhsuk-details__text">
                        <p class="nhsuk-body-s">
                            If your work email address changes, our support team can contact you using your secondary email address. This can be a personal email address.
                        </p>
                    </div>
                </details>
                <p class="nhsuk-body-s nhsuk-u-margin-bottom-9">
                    <a href="@(settings.Value.SupportUrls.WhoCanAccessTheLearningHub)" target="_blank">Who can access the Learning Hub?</a>
                </p>
            </div>
        </div>
    </div>
</div>



