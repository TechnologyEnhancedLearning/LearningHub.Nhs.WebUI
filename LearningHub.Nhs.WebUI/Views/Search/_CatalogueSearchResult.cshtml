@using System.Web;
@using LearningHub.Nhs.WebUI.Extensions
@using LearningHub.Nhs.Models.Search.SearchClick;

@model LearningHub.Nhs.WebUI.Models.Search.SearchResultViewModel

@{
    var catalogueResult = Model.CatalogueSearchResult;
    var pagingModel = Model.CatalogueResultPaging;
    var searchString = HttpUtility.UrlEncode(Model.SearchString);
    var suggestedSearchString = Model.DidYouMeanEnabled ? HttpUtility.UrlEncode(Model.SuggestedCatalogue) : HttpUtility.UrlEncode(Model.SearchString);

    string GetCatalogueUrl(string catalogueUrl, int nodePathId, int itemIndex, int catalogueId, SearchClickPayloadModel payload)
    {
        var searchSignal = payload?.SearchSignal;
        string encodedCatalogueUrl = HttpUtility.UrlEncode("/Catalogue/" + catalogueUrl);
        string groupId = HttpUtility.UrlEncode(Model.GroupId.ToString());
        string searchSignalQueryEncoded = HttpUtility.UrlEncode(HttpUtility.UrlDecode(searchSignal?.Query));

        var url = $@"/search/record-catalogue-click?url={encodedCatalogueUrl}&nodePathId={nodePathId}&itemIndex={payload?.HitNumber}
&pageIndex={pagingModel.CurrentPage}&totalNumberOfHits={payload?.SearchSignal?.Stats?.TotalHits}&searchText={suggestedSearchString}&catalogueId={catalogueId}
&GroupId={groupId}&searchId={searchSignal?.SearchId}&timeOfSearch={searchSignal?.TimeOfSearch}&userQuery={HttpUtility.UrlEncode(searchSignal?.UserQuery)}
&query={searchSignalQueryEncoded}&name={payload?.DocumentFields?.Name}";
        return url;
    }
}

@if (pagingModel.TotalPages > 1)
{
    @await Html.PartialAsync("_CataloguePagination", Model)

    <div class="catalogue-all-link nhsuk-u-margin-bottom-3">
        <a href="/catalogues?term=@searchString">View all catalogues</a>
    </div>
}

@if (catalogueResult.DocumentModel != null)
{
    var index = pagingModel.CurrentPage * pagingModel.PageSize;
    <ul class="nhsuk-grid-row nhsuk-card-group">

        @foreach (var item in catalogueResult.DocumentModel)
        {
            var hasBadge = !string.IsNullOrWhiteSpace(item.BadgeUrl);
            var provider = item.Providers?.FirstOrDefault();

            <li class="nhsuk-grid-column-one-third nhsuk-card-group__item">

                <div class="nhsuk-card nhsuk-bg-light-blue catalogue-card">
                    <div class="nhsuk-card-banner-container">
                        @if (!string.IsNullOrWhiteSpace(item.CardImageUrl))
                        {
                            <img class="nhsuk-card__img nhsuk-card-banner" src="/api/catalogue/download-image/@item.CardImageUrl" alt="@item.Name" />
                        }
                        else if (!string.IsNullOrWhiteSpace(item.BannerUrl))
                        {
                            <img class="nhsuk-card__img nhsuk-card-banner" src="/api/catalogue/download-image/@item.BannerUrl" alt="@item.Name" />
                        }
                        else
                        {
                            <div class="nhsuk-bg-pale-blue nhsuk-card-banner nhsuk-card-banner-empty"></div>
                        }
                    </div>
                    <div class="nhsuk-card__content catalogue-card-content">

                        <h3 class="nhsuk-card__heading nhsuk-heading-m">
                            <a class="nhsuk-card__link" href="@GetCatalogueUrl(item.Url, item.NodePathId, index, Int32.Parse(item.Id), item.Click.Payload)">@item.Name</a>
                        </h3>

                        <div class="nhsuk-card__description catalogue-card-body">
                            <div class="line-clamp-3 nhsuk-u-margin-bottom-2point5">
                                @Html.Raw(item.Description)
                            </div>

                            <div class="catalogue-meta">
                                <div>
                                    <div>
                                        @if (item.RestrictedAccess)
                                        {
                                            <div class="nhsuk-u-font-size-16 nhsuk-u-font-weight-bold">@((item.HasAccess || this.User.IsInRole("Administrator")) ? "Access Granted" : "Access restricted")</div>
                                        }
                                    </div>
                                    <div>
                                        <a class="nhsuk-card__link nhsuk-u-font-size-16" asp-controller="Bookmark" asp-action="BookmarkCatalogue"
                                           asp-route-bookmarked="@item.IsBookmarked"
                                           asp-route-id="@item.BookmarkId"
                                           asp-route-title="@item.Name.Truncate(60)"
                                           asp-route-nodeId="@item.Id"
                                           asp-route-path="@item.Url"
                                           asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">

                                            @(item.IsBookmarked ? "Remove from my bookmarks" : "Add to my bookmarks")
                                        </a>
                                    </div>
                                </div>
                                <div>
                                    @if (provider != null)
                                    {
                                        <img src="~/images/provider-logos/@provider.Logo" alt="@provider.Name catalogue badge" class="provider-badge" />
                                    }
                                    else if (hasBadge)
                                    {
                                        <img src="@("/api/dashboard/download-image/" + Uri.EscapeDataString(item.BadgeUrl))" alt="Provider's catalogue badge" class="catalogue-card-badge" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (provider != null)
                    {
                        <div class="card-provider-details">
                            @ProviderHelper.GetProviderString(provider.Name)
                        </div>
                    }
                    else
                    {
                        <div class="card-provider-details card-provider-details--blank"></div>
                    }
                </div>

            </li>

            index++;
        }
    </ul>
}