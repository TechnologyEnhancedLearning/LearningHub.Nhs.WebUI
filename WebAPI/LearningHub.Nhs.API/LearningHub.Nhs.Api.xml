<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LearningHub.Nhs.Api</name>
    </assembly>
    <members>
        <member name="T:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler">
            <summary>
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler.contextAccessor">
            <summary>
            The context accessor.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler.settings">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{LearningHub.Nhs.Api.Shared.Configuration.Settings})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler"/> class.
            Provide Authentication policy for Auth Service.
            </summary>
            <param name="contextAccessor">The context Accessor.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHRequirement)">
            <summary>
            Handle Authentication policy Requirement.
            </summary>
            <param name="context">The context.</param>
            <param name="requirement">The requirement.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHRequirement">
            <summary>
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHRequirement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Authentication.AuthorizeOrCallFromLHRequirement"/> class.
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="T:LearningHub.Nhs.Api.Authentication.ReadWriteHandler">
            <summary>
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Authentication.ReadWriteHandler.contextAccessor">
            <summary>
            The context accessor.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Authentication.ReadWriteHandler.settings">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.ReadWriteHandler.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Options.IOptions{LearningHub.Nhs.Api.Shared.Configuration.Settings})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Authentication.ReadWriteHandler"/> class.
            Provide Authentication policy for Auth Service.
            </summary>
            <param name="contextAccessor">The context Accessor.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.ReadWriteHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,LearningHub.Nhs.Api.Authentication.ReadWriteRequirement)">
            <summary>
            Handle Authentication policy Requirement.
            </summary>
            <param name="context">The context.</param>
            <param name="requirement">The requirement.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Authentication.ReadWriteRequirement">
            <summary>
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.ReadWriteRequirement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Authentication.ReadWriteRequirement"/> class.
            Provide Authentication policy for Auth Service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.ReadWriteRequirement.HasReadWriteRole(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            The can read write.
            </summary>
            <param name="user">The user.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Authentication.ReadWriteRequirement.ReadWriteRoles">
            <summary>
            The read write roles.
            </summary>
            <returns>The Read Write Roles.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ActivityController">
            <summary>
            Activity operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ActivityController.activityService">
            <summary>
            The activity service.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ActivityController.resourceService">
            <summary>
            The resource service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IActivityService,LearningHub.Nhs.Services.Interface.IResourceService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ActivityController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ActivityController"/> class.
            </summary>
            <param name="userService">The elfh user service.</param>
            <param name="activityService">The activity service.</param>
            <param name="resourceService">The resource service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CreateResourceActivity(LearningHub.Nhs.Models.Resource.Activity.CreateResourceActivityViewModel)">
            <summary>
             Create Resource Activity.
            </summary>
            <param name="createResourceActivityViewModel">The details of the resource activity record.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CreateMediaResourceActivity(LearningHub.Nhs.Models.Resource.Activity.CreateMediaResourceActivityViewModel)">
            <summary>
            Create Media Resource Activity.
            </summary>
            <param name="createMediaResourceActivityViewModel">The media resource activity record view model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CreateAssessmentResourceActivity(LearningHub.Nhs.Models.Resource.Activity.CreateAssessmentResourceActivityViewModel)">
            <summary>
            Create Assessment Resource Activity.
            </summary>
            <param name="createAssessmentResourceActivityViewModel">The media resource activity record view model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CreateMediaResourceActivityInteraction(LearningHub.Nhs.Models.Resource.Activity.CreateMediaResourceActivityInteractionViewModel)">
            <summary>
            Create Media Resource Activity.
            </summary>
            <param name="createMediaResourceActivityInteractionModel">The media resource activity interaction record view model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CreateAssessmentResourceActivityInteraction(LearningHub.Nhs.Models.Resource.Activity.CreateAssessmentResourceActivityInteractionViewModel)">
            <summary>
            Create Assessment Resource Activity.
            </summary>
            <param name="createAssessmentResourceActivityInteractionModel">The assessment resource activity interaction record view model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.UpdateScormActivity(LearningHub.Nhs.Models.Resource.Activity.ScormActivityViewModel)">
            <summary>
            Update Scorm Activity.
            </summary>
            <param name="updateScormActivityViewModel">The scorm activity.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CompleteScormActivity(LearningHub.Nhs.Models.Resource.Activity.ScormActivityViewModel)">
            <summary>
            Complete Scorm Activity.
            </summary>
            <param name="completeScormActivityViewModel">The scorm activity.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.LaunchScormActivity(LearningHub.Nhs.Models.Resource.Activity.LaunchScormActivityViewModel)">
            <summary>
            Launch Scorm Activity.
            </summary>
            <param name="launchScormActivityViewModel">The scorm activity.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.CleanUpIncompleteActivitiesAsync(System.Int32)">
            <summary>
            This method cleans up incomplete media activities. Required if for any reason, the end of the user's activity was not recorded normally. For example - browser crash, power loss, connection loss.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ActivityController.ResolveScormActivity(System.Int32)">
            <summary>
            This method cleans up incomplete media activities. Required if for any reason, the end of the user's activity was not recorded normally. For example - browser crash, power loss, connection loss.
            </summary>
            <param name="userId">The user id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ApiControllerBase">
            <summary>
            The api controller base.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ApiControllerBase.currentUser">
            <summary>
            The current user.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ApiControllerBase.#ctor(LearningHub.Nhs.Services.Interface.IUserService,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ApiControllerBase"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="logger">logger.</param>
        </member>
        <member name="P:LearningHub.Nhs.Api.Controllers.ApiControllerBase.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="P:LearningHub.Nhs.Api.Controllers.ApiControllerBase.CurrentUserId">
            <summary>
            Gets the current user id.
            </summary>
        </member>
        <member name="P:LearningHub.Nhs.Api.Controllers.ApiControllerBase.UserService">
            <summary>
            Gets the elfh user service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ApiControllerBase.GetCurrentUserAsync">
            <summary>
            The get current user async.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.BookmarkController">
            <summary>
            Defines the <see cref="T:LearningHub.Nhs.Api.Controllers.BookmarkController" />.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.BookmarkController.bookmarkService">
            <summary>
            Defines the bookmarkService.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IBookmarkService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.BookmarkController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.BookmarkController"/> class.
            </summary>
            <param name="userService">userService.</param>
            <param name="bookmarkService">The bookmarkService<see cref="T:LearningHub.Nhs.Services.Interface.IBookmarkService"/>.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.Toggle(LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel)">
            <summary>
            The Toggle.
            </summary>
            <param name="bookmarkViewModel">The bookmarkViewModel<see cref="T:LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.GetAllByParent(System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            The GetAllByParent.
            </summary>
            <param name="parentId">The parentId.</param>
            <param name="all">The all.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.Create(LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel)">
            <summary>
            The Create.
            </summary>
            <param name="bookmarkViewModel">The bookmarkViewModel<see cref="T:LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.Edit(LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel)">
            <summary>
            The Edit.
            </summary>
            <param name="bookmarkViewModel">The bookmarkViewModel<see cref="T:LearningHub.Nhs.Models.Bookmark.UserBookmarkViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.BookmarkController.DeleteFolder(System.Int32)">
            <summary>
            The DeleteFolder.
            </summary>
            <param name="bookmarkId">The bookmarkId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.CatalogueController">
            <summary>
            The CatalogueController.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.ICatalogueService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.CatalogueController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.CatalogueController"/> class.
            </summary>
            <param name="userService">The userService.</param>
            <param name="catalogueService">The catalogueService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogues(System.String)">
            <summary>
            The GetCatalogue.
            </summary>
            <param name="searchTerm">The searchTerm.</param>
            <returns>The catalogues.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogue(System.Int32)">
            <summary>
            The GetCatalogue.
            </summary>
            <param name="id">The catalogue node version id.</param>
            <returns>The catalogue.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogueByReference(System.String)">
            <summary>
            Get Catalogue by reference.
            </summary>
            <param name="reference">The reference.</param>
            <returns>The catalogue.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogueByReferenceRecorded(System.String)">
            <summary>
            Get Catalogue by reference.
            </summary>
            <param name="reference">The reference.</param>
            <returns>The catalogue.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCataloguesForCurrentUser">
            <summary>
            The published catalogues for current user.
            </summary>
            <returns>Published catalogues for current user.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.CreateCatalogue(LearningHub.Nhs.Models.Catalogue.CatalogueViewModel)">
            <summary>
            The CreateCatalogue.
            </summary>
            <param name="viewModel">The viewModel.</param>
            <returns>The actionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.UpdateCatalogue(LearningHub.Nhs.Models.Catalogue.CatalogueViewModel)">
            <summary>
            The UpdateCatalogue.
            </summary>
            <param name="viewModel">The catalogue.</param>
            <returns>The updated catalogue.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.UpdateCatalogueOwner(LearningHub.Nhs.Models.Catalogue.CatalogueOwnerViewModel)">
            <summary>
            The UpdateCatalogueOwner.
            </summary>
            <param name="viewModel">The catalogue owner.</param>
            <returns>The updated catalogue owner.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.ShowCatalogue(LearningHub.Nhs.Models.Catalogue.CatalogueBasicViewModel)">
            <summary>
            The ShowCatalogue.
            </summary>
            <param name="vm">The vm.</param>
            <returns>The actionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.HideCatalogue(LearningHub.Nhs.Models.Catalogue.CatalogueBasicViewModel)">
            <summary>
            The HideCatalogue.
            </summary>
            <param name="vm">The vm.</param>
            <returns>The actionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogueResources(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            The GetCatalogueResources.
            </summary>
            <param name="id">The id.</param>
            <param name="page">The page.</param>
            <param name="pageSize">The pageSize.</param>
            <param name="sortColumn">The sortColumn.</param>
            <param name="sortDirection">The sortDirection.</param>
            <param name="filter">The filter.</param>
            <returns>The catalogue resources.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetResources(LearningHub.Nhs.Models.Catalogue.CatalogueResourceRequestViewModel)">
            <summary>
            GetResources.
            </summary>
            <param name="requestViewModel">requestViewModel.</param>
            <returns>The actionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.CanCurrentUserEditCatalogueAsync(System.Int32)">
            <summary>
            Returns true if the catalogue is editable by the current user.
            </summary>
            <param name="catalogueId">The catalogue id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.AccessDetailsAsync(System.String)">
            <summary>
            The AccessDetails.
            </summary>
            <param name="reference">The catalogue reference.</param>
            <returns>The catalogue access details.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetCatalogueAccessRequests(System.Int32)">
            <summary>
            The GetCatalogueAccessRequests.
            </summary>
            <param name="catalogueNodeId">The request model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetLatestCatalogueAccessRequestAsync(System.Int32)">
            <summary>
            The GetLatestCatalogueAccessRequest.
            </summary>
            <param name="catalogueNodeId">The request model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.InviteUser(LearningHub.Nhs.Models.Catalogue.RestrictedCatalogueInviteUserViewModel)">
            <summary>
            The InviteUser.
            </summary>
            <param name="vm">The view model.</param>
            <returns>The ActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.RequestAccess(System.String,LearningHub.Nhs.Models.Catalogue.CatalogueAccessRequestViewModel)">
            <summary>
            The RequestAccess.
            </summary>
            <param name="reference">The reference.</param>
            <param name="vm">The view model.</param>
            <returns>The ActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetRestrictedCatalogueAccessRequests(LearningHub.Nhs.Models.Catalogue.RestrictedCatalogueAccessRequestsRequestViewModel)">
            <summary>
            Gets the restricted catalogues access requests for the supplied request view model.
            </summary>
            <param name="requestModel">The request model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetRestrictedCatalogueUsers(LearningHub.Nhs.Models.Catalogue.RestrictedCatalogueUsersRequestViewModel)">
            <summary>
            Gets the restricted catalogues users for the supplied request view model.
            </summary>
            <param name="requestModel">The request model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.GetRestrictedCatalogueSummary(System.Int32)">
            <summary>
            Gets the restricted catalogues summary for the supplied catalogue node id.
            </summary>
            <param name="catalogueNodeId">The catalogueNodeId.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.RejectAccessRequest(System.Int32,LearningHub.Nhs.Models.Catalogue.CatalogueAccessRejectionViewModel)">
            <summary>
            The RejectAccessRequest.
            </summary>
            <param name="accessRequestId">The accessRequestId.</param>
            <param name="vm">The vm.</param>
            <returns>The action result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.AcceptAccessRequest(System.Int32)">
            <summary>
            The AcceptAccessRequest.
            </summary>
            <param name="accessRequestId">The accessRequestId.</param>
            <returns>The action result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.CatalogueController.AccessRequest(System.Int32)">
            <summary>
            The AccessRequest.
            </summary>
            <param name="accessRequestId">The access request id.</param>
            <returns>The access request.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ContentController">
            <summary>
            The ContentController.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ContentController.pageService">
            <summary>
            Defines the pageService.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IPageService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ContentController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ContentController"/> class.
            </summary>
            <param name="userService">userService.</param>
            <param name="pageService">pageService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPagesAsync">
            <summary>
            Gets pages.
            </summary>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPageByIdAsync(System.Int32,System.Boolean)">
            <summary>
            Gets page.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <param name="publishedOnly">The published only<see cref="T:System.Boolean"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPageWithAllSectionsByIdAsync(System.Int32)">
            <summary>
            Gets page.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.DiscardAsync(System.Int32)">
            <summary>
            Gets page.
            </summary>
            <param name="pageId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.PublishAsync(System.Int32)">
            <summary>
            Gets page.
            </summary>
            <param name="pageId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.CloneAsync(System.Int32)">
            <summary>
            Clone page section.
            </summary>
            <param name="pageSectionId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.ChangeOrderAsync(LearningHub.Nhs.Models.Content.UpdatePageSectionOrderModel)">
            <summary>
            Clone page section.
            </summary>
            <param name="requestViewModel">The id<see cref="T:LearningHub.Nhs.Models.Content.UpdatePageSectionOrderModel"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.HideAsync(System.Int32)">
            <summary>
            Hide page section.
            </summary>
            <param name="pageSectionId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UnHideAsync(System.Int32)">
            <summary>
            Unhide page section.
            </summary>
            <param name="pageSectionId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.DeleteAsync(System.Int32)">
            <summary>
            Unhide page section.
            </summary>
            <param name="pageSectionId">The id<see cref="T:System.Int32"/>.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPageSectionByDetailIdAsync(System.Int32)">
            <summary>
            The GetPageSectionById.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPageSectionDetailByIdAsync(System.Int32)">
            <summary>
            The GetPageSectionDetailById.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetEditablePageSectionDetailByPageSectionIdAsync(System.Int32)">
            <summary>
            The GetPageSectionDetailById.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.GetPageSectionDetailVideoAssetByIdAsync(System.Int32)">
            <summary>
            The GetPageSectionDetailVideoById.
            </summary>
            <param name="id">The id<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.CreatePageSectionAsync(LearningHub.Nhs.Models.Content.PageSectionViewModel)">
            <summary>
            The CreatePageSectionAsync.
            </summary>
            <param name="requestViewModel">requestViewModel.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UpdatePageImageSectionDetailAsync(System.Int32,LearningHub.Nhs.Models.Content.PageImageSectionUpdateViewModel)">
            <summary>
            Update page image section detail.
            </summary>
            <param name="pageId">The pageId<see cref="T:System.Int32"/>.</param>
            <param name="model">The update model<see cref="T:LearningHub.Nhs.Models.Content.PageImageSectionUpdateViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.SaveVideoAssetAsync(LearningHub.Nhs.Models.Content.FileCreateRequestViewModel)">
            <summary>
            The save video asset async.
            </summary>
            <param name="requestViewModel">The requestViewModel<see cref="T:LearningHub.Nhs.Models.Content.FileCreateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.SaveAttributeFileDetails(LearningHub.Nhs.Models.Content.FileCreateRequestViewModel)">
            <summary>
            The save file details for a video asset attribute async.
            </summary>
            <param name="requestViewModel">The requestViewModel<see cref="T:LearningHub.Nhs.Models.Content.FileCreateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UpdateVideoAssetStateAsync(LearningHub.Nhs.Models.Content.UpdateVideoAssetStateViewModel)">
            <summary>
            The UpdateVideoAssetAsync.
            </summary>
            <param name="videoAssetStateViewModel">videoAssetStateViewModel.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UpdateVideoAssetManifestDetailsAsync(LearningHub.Nhs.Models.Content.UpdateVideoAssetManifestRequestViewModel)">
            <summary>
            The UpdateVideoAssetManifestDetailsAsync.
            </summary>
            <param name="viewModel">The viewModel<see cref="T:LearningHub.Nhs.Models.Content.UpdateVideoAssetManifestRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UpdateVideoAssetAsync(LearningHub.Nhs.Models.Content.VideoAssetViewModel)">
            <summary>
            The UpdateVideoAssetAsync.
            </summary>
            <param name="viewModel">The viewModel<see cref="T:LearningHub.Nhs.Models.Content.VideoAssetViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ContentController.UpdatePageSectionDetailsAsync(LearningHub.Nhs.Models.Content.PageSectionDetailViewModel)">
            <summary>
            save page section details.
            </summary>
            <param name="requestViewModel">The requestViewModel<see cref="T:LearningHub.Nhs.Models.Content.PageSectionDetailViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.DashboardController">
            <summary>
            The DashboardController.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.DashboardController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IDashboardService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.DashboardController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.DashboardController"/> class.
            </summary>
            <param name="userService">userService.</param>
            <param name="dashboardService">dashboardService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.DashboardController.GetResources(System.String,System.Int32)">
            <summary>
             Gets resources.
            </summary>
            <param name="dashboardType">The dashboard type.</param>
            <param name="fetchRows">The number of rows to return.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.DashboardController.GetCatalogues(System.String,System.Int32,System.Int32)">
            <summary>
            Gets Catalogues.
            </summary>
            <param name="dashboardType">The dashboard type.</param>
            <param name="fetchRows">The number of rows to return.</param>
            <param name="offsetRows">The number of rows to skip.</param>
            <returns>IActionResult.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.DetectJsLogController">
            <summary>
            DetectJsLog operations.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.DetectJsLogController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IDetectJsLogService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.DetectJsLogController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.DetectJsLogController"/> class.
            </summary>
            <param name="userService">IUserService.</param>
            <param name="detectJsLogService">IDetectJsLogService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.DetectJsLogController.UpdateAsync(System.Int64,System.Int64)">
            <summary>
            Update.
            </summary>
            <param name="jsEnabled">Js enabled request count.</param>
            <param name="jsDisabled">Js disabled request count.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.EventController">
            <summary>
            Event operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.EventController.eventService">
            <summary>
            The event service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IEventService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.EventController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.EventController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="eventService">The event service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventController.GetAsync(System.Int32)">
            <summary>
            Get specific event by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventController.CreateAsync(LearningHub.Nhs.Models.Entities.Analytics.Event)">
            <summary>
            The create event async.
            </summary>
            <param name="eventEntity">The event.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventController.PutAsync(LearningHub.Nhs.Models.Entities.Analytics.Event)">
            <summary>
            Update an existing Event.
            </summary>
            <param name="eventEntity">The event.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.EventLogController">
            <summary>
            Event operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.EventLogController.eventLogService">
            <summary>
            The event log service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventLogController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IEventLogService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.EventLogController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.EventLogController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="eventLogService">The event service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.EventLogController.CreateEvent(LearningHub.Nhs.Models.EventLog.EventViewModel)">
            <summary>
            Create event.
            </summary>
            <param name="eventViewModel">eventViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.HierarchyController">
            <summary>
            The HierarchyController. Provides functionality around the content hierarchy - retrieving node contents for treeviews,
            creating/moving/deleting/reordering folders, moving/reordering resources, etc.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IHierarchyService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.HierarchyController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.HierarchyController"/> class.
            </summary>
            <param name="userService">The userService.</param>
            <param name="hierarchyService">The hierarchyService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodeDetails(System.Int32)">
            <summary>
            Gets the basic details of a node. Currently catalogues or folders.
            </summary>
            <param name="nodeId">The node id.</param>
            <returns>The node details.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodePathNodes(System.Int32)">
            <summary>
            Gets the basic details of all Nodes in a particular NodePath.
            </summary>
            <param name="nodePathId">The NodePath id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodeContentsForCatalogueBrowse(System.Int32)">
            <summary>
            Gets the contents of a node for the catalogue landing page - i.e. published folders and published resources only.
            Only returns the items found directly in the specified node, does not recurse down through subfolders.
            </summary>
            <param name="nodeId">The node id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodeContentsForCatalogueEditor(System.Int32)">
            <summary>
            Gets the contents of a node for the My Contributions page - i.e. published folders only, and all resources (i.e. all statuses).
            Only returns the items found directly in the specified node, does not recurse down through subfolders.
            </summary>
            <param name="nodeId">The node id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodeContentsAdmin(System.Int32,System.Boolean)">
            <summary>
            Gets the contents of a node (catalogue/folder/course) - i.e. returns a list of subfolders and resources. Only returns the
            items from the first level down. Doesn't recurse through subfolders.
            </summary>
            <param name="nodeId">The node id.</param>
            <param name="readOnly">Set to true if read only data set is required.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetHierarchyEdits(System.Int32)">
            <summary>
            Gets hierarchy edit detail for the supplied root node id.
            </summary>
            <param name="rootNodeId">The root node id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodeResourceLookupAsync(System.Int32)">
            <summary>
            The get node resource lookup.
            IT1 - quick lookup for whether a node has published resources.
            Services Content Structure Admin.
            </summary>
            <param name="nodeId">The nodeId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetNodePathsForNodeAsync(System.Int32)">
            <summary>
            The get node paths for node.
            </summary>
            <param name="nodeId">The nodeId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.CreateHierarchyEdit(System.Int32)">
            <summary>
            Creates hierarchy edit detail for the supplied root node id.
            </summary>
            <param name="rootNodeId">The root node id.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.DiscardHierarchyEdit(System.Int32)">
            <summary>
            Discards hierarchy edit detail for the supplied root node id.
            </summary>
            <param name="hierarchyEditId">The hierarchy edit view model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.CreateFolder(LearningHub.Nhs.Models.Hierarchy.FolderEditViewModel)">
            <summary>
            Creates a new folder.
            </summary>
            <param name="folderEditViewModel">The folderEditViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.FolderEditViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.UpdateFolder(LearningHub.Nhs.Models.Hierarchy.FolderEditViewModel)">
            <summary>
            Updates a folder.
            </summary>
            <param name="folderEditViewModel">The folderEditViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.FolderEditViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.DeleteFolder(System.Int32)">
            <summary>
            The DeleteFolder.
            </summary>
            <param name="hierarchyEditDetailId">The id.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.GetFolder(System.Int32)">
            <summary>
            The GetFolder.
            </summary>
            <param name="nodeVersionId">The id.</param>
            <returns>The catalogue.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveNodeUp(System.Int32)">
            <summary>
            The MoveNodeUp.
            </summary>
            <param name="hierarchyEditDetailId">The id.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveNodeDown(System.Int32)">
            <summary>
            The MoveNodeDown.
            </summary>
            <param name="hierarchyEditDetailId">The id.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveNode(LearningHub.Nhs.Models.Hierarchy.MoveNodeViewModel)">
            <summary>
            Moves a node.
            </summary>
            <param name="moveNodeViewModel">The moveNodeViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.MoveNodeViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.HierarchyEditMoveResourceUp(System.Int32)">
            <summary>
            Moves a resource up in a hierarchy edit.
            </summary>
            <param name="hierarchyEditDetailId">The id.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.HierarchyEditMoveResourceDown(System.Int32)">
            <summary>
            Moves a resource down in a hierarchy edit.
            </summary>
            <param name="hierarchyEditDetailId">The id.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.HierarchyEditMoveResource(LearningHub.Nhs.Models.Hierarchy.HierarchyEditMoveResourceViewModel)">
            <summary>
            Moves a resource in a hierarchy edit.
            </summary>
            <param name="moveResourceViewModel">The moveResourceViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.HierarchyEditMoveResourceViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveResourceUp(System.Int32,System.Int32)">
            <summary>
            The MoveResourceUp.
            </summary>
            <param name="nodeId">The id of the node containing the resource.</param>
            <param name="resourceId">The resource id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveResourceDown(System.Int32,System.Int32)">
            <summary>
            The MoveResourceDown.
            </summary>
            <param name="nodeId">The id of the node containing the resource.</param>
            <param name="resourceId">The resource id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.MoveResource(System.Int32,System.Int32,System.Int32)">
            <summary>
            The MoveResource.
            </summary>
            <param name="sourceNodeId">The id of the node to move the resource from.</param>
            <param name="destinationNodeId">The id of the node to move the resource to.</param>
            <param name="resourceId">The resource id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.SubmitHierarchyEditForPublish(LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel)">
            <summary>
            Submit HierarchyEdit For Publish.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.PublishHierarchyEdit(LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel)">
            <summary>
            Publish HierarchyEdit
              TODO - requires validation.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.HierarchyEditPublishing(LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel)">
            <summary>
            Set HierarchyEdit to Publishing.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.HierarchyController.HierarchyEditFailedToPublish(LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel)">
            <summary>
            Set HierarchyEdit to Publish Failed.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Hierarchy.PublishHierarchyEditViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.InternalSystemController">
            <summary>
            The Internal System Controller.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.InternalSystemController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IInternalSystemService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.InternalSystemController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.InternalSystemController"/> class.
            </summary>
            <param name="userService">The userService.</param>
            <param name="internalSystemService">The internalSystemService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.InternalSystemController.GetAll">
            <summary>
            Gets all internal systems.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.InternalSystemController.GetById(System.Int32)">
            <summary>
            The get by id.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.InternalSystemController.ToggleOfflineStatus(System.Int32)">
            <summary>
            Toggles the internalSystem offline status.
            </summary>
            <param name="id">The id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.LogController">
            <summary>
            The log controller.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.LogController.logService">
            <summary>
            The log service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.LogController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.ILogService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.LogController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.LogController"/> class.
            </summary>
            <param name="elfhUserService">
            The elfh user service.
            </param>
            <param name="logService">
            The log service.
            </param>
            <param name="logger">
            The logger.
            </param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.LogController.GetById(System.Int32)">
            <summary>
            The get by id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.LogController.GetPage(System.Int32,System.Int32)">
            <summary>
            The get page of Log records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.LogController.GetFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get a filtered page of Log records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.MessageController">
            <summary>
            The message controller.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MessageController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.Messaging.IMessageService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.MessageController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.MessageController"/> class.
            </summary>
            <param name="userService">The userService.</param>
            <param name="messageService">The messageService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MessageController.GetPendingMessages">
            <summary>
            Gets the pending messages.
            </summary>
            <returns>The pending messages.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MessageController.MarkAsSent(System.Collections.Generic.List{System.Int32})">
            <summary>
            Marks the message sends as sent.
            </summary>
            <param name="messageSendIds">The messageSendIds.</param>
            <returns>The apiResponse.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MessageController.MarkAsSending(System.Collections.Generic.List{System.Int32})">
            <summary>
            Marks the message sends as sent.
            </summary>
            <param name="messageSendIds">The messageSendIds.</param>
            <returns>The apiResponse.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MessageController.MarkAsFailed(System.Collections.Generic.List{System.Int32})">
            <summary>
            Marks the message sends as sent.
            </summary>
            <param name="messageFailedIds">The messageFailedIds.</param>
            <returns>The apiResponse.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.MigrationController">
            <summary>
            The migration controller.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.MigrationController.migrationService">
            <summary>
            The migration service..
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IMigrationService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.MigrationController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.MigrationController"/> class.
            </summary>
            <param name="userService">The UserService<see cref="T:LearningHub.Nhs.Services.Interface.IUserService"/>.</param>
            <param name="migrationService">The migrationService<see cref="T:LearningHub.Nhs.Services.Interface.IMigrationService"/>.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.CreateFromJsonFile(Microsoft.AspNetCore.Http.IFormFile,System.Int32,System.String,System.Int32)">
            <summary>
            The create from json file.
            </summary>
            <param name="file">The file<see cref="T:Microsoft.AspNetCore.Http.IFormFile"/>.</param>
            <param name="migrationSourceId">The migrationSourceId<see cref="T:System.Int32"/>.</param>
            <param name="azureMigrationContainerName">The azureMigrationContainerName<see cref="T:System.String"/>.</param>
            <param name="destinationNodeId">The destinationNodeId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.CreateFromStagingTables(Microsoft.AspNetCore.Http.IFormFile,System.Int32,System.String)">
            <summary>
            Creates a new migration from metadata provided in an Excel template file and processed via the staging tables ADF pipeline.
            </summary>
            <param name="file">The file.</param>
            <param name="migrationSourceId">The migration source id.</param>
            <param name="azureMigrationContainerName">The azure migration container name.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.Validate(System.Int32)">
            <summary>
            Validates an existing migration. This can be called after CreateFromJsonFile.
            </summary>
            <param name="migrationId">The migrationId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.BeginCreateMetadata(System.Int32)">
            <summary>
            Initiates the creation of the Learning Hub resources for an existing migration. This can be called after the Validate method.
            Puts messages onto a queue, which an Azure Function then picks up and performs the actual record creation.
            </summary>
            <param name="migrationId">The migration id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.CheckStatusOfCreateMetadata(System.Int32)">
            <summary>
            Returns the current progress of a previous call to CreateMetadata.
            </summary>
            <param name="migrationId">The migration id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.CreateMetadataForSingleInputRecord(LearningHub.Nhs.Models.Migration.MigrationInputRecordRequestModel)">
            <summary>
            Initiates the creation of the Learning Hub resources for an existing migration. Puts messages onto a queue, which
            an Azure Function picks up and performs the actual record creation.
            </summary>
            <param name="requestModel">The request model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.BeginPublishResources(System.Int32)">
            <summary>
            Publish the draft resources of a migration. This can be called after CreateMetadata has completed.
            This method results in messages being placed on an Azure queue for publishing afterwards. The UpdateStatusOfPublishResources method is called to
            update the status of the input records as resources are published by the LH publishing Azure function.
            </summary>
            <param name="migrationId">The migration id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.PublishResourceForSingleInputRecord(System.Int32)">
            <summary>
            Publishes the resource for a single input record. This method needs to be called for each input record after the BeginPublishResources method has been called for the migration.
            This used to all happen in a single web service call but has been split out to avoid timeout errors on large migrations.
            </summary>
            <param name="migrationInputRecordId">The migration input record id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.CheckStatusOfPublishResources(System.Int32)">
            <summary>
            Checks the status of MigrationInputRecords following a previous call to PublishResources. The LH publishing Azure function picks up messages placed on a
            queue by the BeginPublishResources method and carries out the actual publish operations. This method checks the status of the ResourceVersions to see if they have been published yet.
            </summary>
            <param name="migrationId">The migration id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.GetPublishedResourceVersionIds(System.Int32)">
            <summary>
            Gets a list of ResourceVersionIds that were published as part of a migration. Intended to be used by the migration tool to unpublish each resource.
            </summary>
            <param name="migrationId">The migration id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MigrationController.GetMigrationSourcesAsync">
            <summary>
            The GetMigrationSourcesAsync.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.MyLearningController">
            <summary>
            MyLearning operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.MyLearningController.myLearningService">
            <summary>
            The MyLearning service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MyLearningController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IMyLearningService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.MyLearningController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.MyLearningController"/> class.
            </summary>
            <param name="userService">
            The user service.
            </param>
            <param name="myLearningService">
            The myLearning service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MyLearningController.GetActivityDetailed(LearningHub.Nhs.Models.MyLearning.MyLearningRequestModel)">
            <summary>
            Gets the activity records for the detailed activity tab of My Learning screen.
            </summary>
            <param name="requestModel">The request model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.MyLearningController.GetPlayedSegments(System.Int32,System.Int32)">
            <summary>
            Gets the played segment data for the progress modal in My Learning screen.
            </summary>
            <param name="resourceId">The resourceId.</param>
            <param name="majorVersion">The majorVersion.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.NotificationController">
            <summary>
            Notification operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.NotificationController.notificationService">
            <summary>
            The notification service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.INotificationService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.NotificationController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.NotificationController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="notificationService">The notification service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.GetById(System.Int32)">
            <summary>
            Get Notification record by id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.GetFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            The get filtered page.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.PostAsync(LearningHub.Nhs.Models.Notification.NotificationViewModel)">
            <summary>
            Create a new Notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.PutAsync(LearningHub.Nhs.Models.Notification.NotificationViewModel)">
            <summary>
            Update an existing Notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.NotificationController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a notification.
            </summary>
            <param name="id">The notification id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.PartialFileController">
            <summary>
            Defines the <see cref="T:LearningHub.Nhs.Api.Controllers.PartialFileController" />.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PartialFileController.#ctor(LearningHub.Nhs.Services.Interface.IPartialFileService,LearningHub.Nhs.Services.Interface.IUserService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.PartialFileController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.PartialFileController"/> class.
            </summary>
            <param name="partialFileService">
            The Partial File Service.
            </param>
            <param name="userService">
            The user service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PartialFileController.CreatePartialFile(LearningHub.Nhs.Models.Resource.Files.PartialFileViewModel)">
            <summary>
            Create a new Partial File.
            </summary>
            <param name="viewModel">The view model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PartialFileController.GetPartialFile(System.Int32)">
            <summary>
            Get Partial File by File ID.
            </summary>
            <param name="fileId">The File ID.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PartialFileController.CompletePartialFile(System.Int32)">
            <summary>
            Sets the Partial File upload to be complete and queues any post-processing.
            </summary>
            <param name="fileId">The File ID.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.PermissionController">
            <summary>
            Permission operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.PermissionController.permissionService">
            <summary>
            The permission service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IPermissionService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.PermissionController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.PermissionController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="permissionService">The permission service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.GetAsync(System.Int32,System.Boolean)">
            <summary>
            Get specific Permission by Id.
            </summary>
            <param name="id">The id.</param>
            <param name="includeRoles">The include roles.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.GetAvailableForRoleAsync(System.Int32)">
            <summary>
            Get Permissions available for Role.
            </summary>
            <param name="roleId">The role id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.Search(System.String,System.Int32,System.Int32)">
            <summary>
            Search Permissions.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.CreateAsync(LearningHub.Nhs.Models.Entities.Permission)">
            <summary>
            Create a new Permission.
            </summary>
            <param name="permission">The permission.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.PutAsync(LearningHub.Nhs.Models.Entities.Permission)">
            <summary>
            Update an existing Permission.
            </summary>
            <param name="permission">The permission.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.PermissionController.DeleteAsync(System.Int32)">
            <summary>
            Delete specific Permission by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.RatingController">
            <summary>
            Rating operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.RatingController.ratingService">
            <summary>
            The rating service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RatingController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IRatingService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.RatingController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.RatingController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="ratingService">The rating service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RatingController.GetRatingSummary(System.Int32)">
            <summary>
            Gets the rating summary for the entity.
            </summary>
            <param name="entityVersionId">The entity version id. Currently this is always a ResourceVersionId, but might be a NodeVersionId in the future.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RatingController.CreateRating(LearningHub.Nhs.Models.Common.RatingViewModel)">
            <summary>
            Create a new rating.
            </summary>
            <param name="ratingViewModel">The ratingViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RatingController.UpdateRating(LearningHub.Nhs.Models.Common.RatingViewModel)">
            <summary>
            Update a rating. Can be performed on ratings for any minor version of a major version of the resource.
            </summary>
            <param name="ratingViewModel">The ratingViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ReportController">
            <summary>
            Report operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ReportController.reportService">
            <summary>
            The report service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.Report.IReportService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ReportController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ReportController"/> class.
            </summary>
            <param name="userService">
            The user service.
            </param>
            <param name="reportService">
            The activity service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.Get(System.String,System.String)">
            <summary>
            get report.
            </summary>
            <param name="fileName">file name.</param>
            <param name="hash">hash.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.GetReportExists(System.String,System.String)">
            <summary>
            Get report exists.
            </summary>
            <param name="fileName">file name.</param>
            <param name="hash">hash.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.GetReportStatus(System.String,System.String)">
            <summary>
            Get report status.
            </summary>
            <param name="fileName">file name.</param>
            <param name="hash">hash.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.Post(LearningHub.Nhs.Models.Report.ReportCreate.RequestModel)">
            <summary>
            Create a new report.
            </summary>
            <param name="requestModel">The report request model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ReportController.UpdateReportStatus(LearningHub.Nhs.Models.Report.ReportStatusUpdateModel)">
            <summary>
            Update report status.
            </summary>
            <param name="reportStatusUpdateModel">The report.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ResourceController">
            <summary>
            Resource operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ResourceController.resourceService">
            <summary>
            The resource service...
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ResourceController.activityService">
            <summary>
            The activity service...
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ResourceController.hierarchyService">
            <summary>
            The hierarchy service...
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ResourceController.fileTypeService">
            <summary>
            The file type service...
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IResourceService,LearningHub.Nhs.Services.Interface.IActivityService,LearningHub.Nhs.Services.Interface.IHierarchyService,LearningHub.Nhs.Services.Interface.IFileTypeService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ResourceController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ResourceController"/> class.
            </summary>
            <param name="userService">The UserService<see cref="T:LearningHub.Nhs.Services.Interface.IUserService"/>.</param>
            <param name="resourceService">The resourceService<see cref="T:LearningHub.Nhs.Services.Interface.IResourceService"/>.</param>
            <param name="activityService">The activityService<see cref="T:LearningHub.Nhs.Services.Interface.IActivityService"/>.</param>
            <param name="hierarchyService">The hierarchyService<see cref="T:LearningHub.Nhs.Services.Interface.IHierarchyService"/>.</param>
            <param name="fileTypeService">The fileTypeService<see cref="T:LearningHub.Nhs.Services.Interface.IFileTypeService"/>.</param>
            <param name="logger">The logger<see cref="T:Microsoft.Extensions.Logging.ILogger`1"/>.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAsync(System.Int32)">
            <summary>
            Get specific Resource by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.CreateResourceAsync(LearningHub.Nhs.Models.Resource.Contribute.ResourceDetailViewModel)">
            <summary>
            Create a new Resource and an initial ResourceVersion with a status of "Draft".
            </summary>
            <param name="viewModel">The viewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ResourceDetailViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DuplicateResourceAsync(LearningHub.Nhs.Models.Resource.Contribute.DuplicateResourceRequestModel)">
            <summary>
            DuplicateResourceAsync.
            </summary>
            <param name="duplicateResourceRequestModel">The duplicateResourceRequestModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.DuplicateResourceRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.CreateNewResourceVersion(System.Collections.Generic.KeyValuePair{System.String,System.Int32})">
            <summary>
            CreateNewResourceVersion.
            </summary>
            <param name="model">The model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SetResourceType(LearningHub.Nhs.Models.Resource.Contribute.ResourceViewModel)">
            <summary>
            SetResourceType
            Applies a ResourceType to a ResourceVersion "Draft"
            Cannot change the ResourceType of a Published ResourceVersion(?)
            TODO - requires validation.
            </summary>
            <param name="resourceViewModel">The resourceViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ResourceViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionAsync(System.Int32)">
            <summary>
            Get specific ResourceVersion by Id.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionViewModelAsync(System.Int32)">
            <summary>
            Get specific ResourceVersionViewModel by Id.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionForVideo(System.Int32)">
            <summary>
            Get specific resource version view model that is linked to a Video file from the file Id.
            </summary>
            <param name="fileId">The fileId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionForWholeSlideImage(System.Int32)">
            <summary>
            Get specific resource version view model that is linked to a whole slide image file from the file Id.
            </summary>
            <param name="fileId">The fileId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionByResourceReferenceAsync(System.Int32)">
            <summary>
            Get specific ResourceVersionViewModel by Resource Reference Id.
            </summary>
            <param name="resourceReferenceId">The resource reference id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionExtendedViewModelAsync(System.Int32)">
            <summary>
            Get specific ResourceVersionViewModel by Id.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.PublishResourceVersion(LearningHub.Nhs.Models.Resource.PublishViewModel)">
            <summary>
            Publish ResourceVersion
              TODO - requires validation.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.PublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SubmitResourceVersionForPrepareAsync(LearningHub.Nhs.Models.Resource.PublishViewModel)">
            <summary>
            Submit ResourceVersion For Prepare.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.PublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SubmitResourceVersionForPublishAsync(LearningHub.Nhs.Models.Resource.PublishViewModel)">
            <summary>
            Submit ResourceVersion For Publish.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.PublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.ResourceVersionPublishing(LearningHub.Nhs.Models.Resource.PublishViewModel)">
            <summary>
            Set ResourceVersion to Publishing.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.PublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.ResourceVersionFailedToPublish(LearningHub.Nhs.Models.Resource.PublishViewModel)">
            <summary>
            Submit ResourceVersion to Publish Failed.
            </summary>
            <param name="publishViewModel">The publishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.PublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.CreateResourceVersionEvent(LearningHub.Nhs.Models.Resource.ResourceVersionEventViewModel)">
            <summary>
            Create resource version event.
            </summary>
            <param name="resourceVersionEventViewModel">resourceVersionEventViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UnpublishResourceVersionAsync(LearningHub.Nhs.Models.Resource.UnpublishViewModel)">
            <summary>
            Unpublish resource version.
            </summary>
            <param name="unpublishViewModel">The unpublishViewModel<see cref="T:LearningHub.Nhs.Models.Resource.UnpublishViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.RevertToDraft(System.Int32)">
            <summary>
            Unpublish resource version.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateResourceVersionAsync(LearningHub.Nhs.Models.Resource.Contribute.ResourceDetailViewModel)">
            <summary>
            The update resource version async.
            </summary>
            <param name="resourceDetailViewModel">The resourceDetailViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ResourceDetailViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteResourceVersionAsync(System.Int32)">
            <summary>
            Delete a resource version async.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.AcceptSensitiveContent(System.Int32)">
            <summary>
            The mark sensitive conatet async.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionsAsync(System.Int32)">
            <summary>
            The get resource versions.
            </summary>
            <param name="resourceId">The resourceId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetGenericFileDetailsAsync(System.Int32)">
            <summary>
            Get specific GenericFileDetails by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetScormDetailsAsync(System.Int32)">
            <summary>
            Get specific GetScormFileDetails by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetScormContentDetailsById(System.Int32)">
            <summary>
            The GetScormContentDetailsById.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.RecordExternalReferenceUserAgreementAsync(LearningHub.Nhs.Models.Resource.ExternalReferenceUserAgreementViewModel)">
            <summary>
            The RecordExternalReferenceUserAgreement.
            </summary>
            <param name="viewModel">viewModel.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateGenericFileDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.GenericFileUpdateRequestViewModel)">
            <summary>
            Update Generic File Details.
            </summary>
            <param name="genericFileViewModel">The genericFileViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.GenericFileUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateScormDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.ScormUpdateRequestViewModel)">
            <summary>
            Update Scorm Detail.
            </summary>
            <param name="scormUpdateRequestViewModel">The scormUpdateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ScormUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetImageDetailsAsync(System.Int32)">
            <summary>
            Get specific ImageDetails by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateImageDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.ImageUpdateRequestViewModel)">
            <summary>
            The update image detail async.
            </summary>
            <param name="imageViewModel">The imageViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ImageUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetVideoDetailsAsync(System.Int32)">
            <summary>
            Get specific VideoDetails by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateVideoDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.VideoUpdateRequestViewModel)">
            <summary>
            The update video detail async.
            </summary>
            <param name="videoViewModel">The videoViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.VideoUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteResourceAttributeFileAsync(LearningHub.Nhs.Models.Resource.Contribute.FileDeleteRequestModel)">
            <summary>
            Delete resource attribute File async.
            </summary>
            <param name="fileDeleteRequestModel">The fileDeleteRequestModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileDeleteRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAudioDetailsAsync(System.Int32)">
            <summary>
            Get specific AudioDetails by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateAudioDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.AudioUpdateRequestViewModel)">
            <summary>
            The update audio detail async.
            </summary>
            <param name="audioViewModel">The audioViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.AudioUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetArticleDetailsAsync(System.Int32)">
            <summary>
            Get specific Article Details by ResourceVersionId.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateArticleDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.ArticleUpdateRequestViewModel)">
            <summary>
            Update article detail async.
            </summary>
            <param name="articleViewModel">The articleViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ArticleUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteArticleFileAsync(LearningHub.Nhs.Models.Resource.Contribute.FileDeleteRequestModel)">
            <summary>
            Delete article detail async.
            </summary>
            <param name="fileDeleteRequestModel">The fileDeleteRequestModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileDeleteRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.AddResourceVersionAuthorAsync(LearningHub.Nhs.Models.Resource.ResourceAuthorViewModel)">
            <summary>
            Add a new Resource Version Author.
            </summary>
            <param name="resourceAuthorViewModel">The resourceAuthorViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ResourceAuthorViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteResourceVersionAuthorAsync(LearningHub.Nhs.Models.Resource.Contribute.AuthorDeleteRequestModel)">
            <summary>
            The delete resource version author async.
            </summary>
            <param name="resourceAuthorViewModel">The resourceAuthorViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.AuthorDeleteRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.AddResourceVersionKeywordAsync(LearningHub.Nhs.Models.Resource.ResourceKeywordViewModel)">
            <summary>
            Add a new Resource Version Keyword
              TODO - requires complete validation - same Keyword added > once.
            </summary>
            <param name="resourceKeywordViewModel">The resourceKeywordViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ResourceKeywordViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteResourceVersionKeywordAsync(LearningHub.Nhs.Models.Resource.Contribute.KeywordDeleteRequestModel)">
            <summary>
            The delete resource version keyword async.
            </summary>
            <param name="resourceKeywordViewModel">The resourceKeywordViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.KeywordDeleteRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionEventsAsync(System.Int32)">
            <summary>
            The get resource version events.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceVersionFlagsAsync(System.Int32)">
            <summary>
            The get resource version flags.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SaveResourceVersionFlagAsync(LearningHub.Nhs.Models.Resource.ResourceVersionFlagViewModel)">
            <summary>
            Save the Resource Version Flag.
            </summary>
            <param name="resourceVersionFlagViewModel">The resourceVersionFlagViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ResourceVersionFlagViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteResourceVersionFlagAsync(System.Int32)">
            <summary>
            The delete resource version flag async.
            </summary>
            <param name="resourceVersionFlagId">The resourceVersionFlagId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetEmbeddedResourceVersionAsync(System.Int32)">
            <summary>
            The get embedded resource version async.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateEmbeddedResourceVersionAsync(LearningHub.Nhs.Models.Resource.EmbedCodeViewModel)">
            <summary>
            The update embedded resource version async.
            </summary>
            <param name="embedCodeViewModel">The embedCodeViewModel<see cref="T:LearningHub.Nhs.Models.Resource.EmbedCodeViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetEquipmentResourceVersionAsync(System.Int32)">
            <summary>
            The get equipment resource version async.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetWebLinkResourceVersionAsync(System.Int32)">
            <summary>
            The get web link resource version async.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateWebLinkResourceVersionAsync(LearningHub.Nhs.Models.Resource.WebLinkViewModel)">
            <summary>
            The update web link resource version async.
            </summary>
            <param name="webLinkViewModel">The webLinkViewModel<see cref="T:LearningHub.Nhs.Models.Resource.WebLinkViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateScormPublishDetailsAsync(LearningHub.Nhs.Models.Resource.Contribute.ScormPublishUpdateViewModel)">
            <summary>
            The scorm publish update async.
            </summary>
            <param name="scormPublishUpdateViewModel">The scormPublishUpdateViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ScormPublishUpdateViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SetScormManifestDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.ScormManifestUpdateRequestViewModel)">
            <summary>
            The create scorm manifest async.
            </summary>
            <param name="scormManifestViewModel">The scormManifestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.ScormManifestUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetCaseResourceVersionAsync(System.Int32)">
            <summary>
            The get case resource version async.
            </summary>
            <param name="resourceVersionId">The resource version id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateCaseResourceVersionAsync(LearningHub.Nhs.Models.Resource.CaseViewModel)">
            <summary>
            The update case resource version async.
            </summary>
            <param name="caseViewModel">The web link view model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAssessmentResourceVersionAsync(System.Int32)">
            <summary>
            Retrieves the entire assessment details given a resource version ID.
            </summary>
            <param name="resourceVersionId">The resource version id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateAssessmentResourceVersionAsync(LearningHub.Nhs.Models.Resource.AssessmentViewModel)">
            <summary>
            This method updates the database entry with the assessment details, passed down as a parameter.
            </summary>
            <param name="assessmentViewModel">The web link view model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetInitialAssessmentContent(System.Int32)">
            <summary>
            Retrieves the assessment details up to the first question, leaving out the feedback and answer types nullified.
            </summary>
            <param name="resourceVersionId">The resource version id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAssessmentProgressByAssessmentResourceActivityId(System.Int32)">
            <summary>
            Retrieves the assessment progress.
            </summary>
            <param name="assessmentResourceActivityId">The assessment resource activity id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAssessmentProgressByResourceVersionId(System.Int32)">
            <summary>
            Retrieves the latest assessment progress of a user for the given resource version id, or an empty response if no such attempt exists.
            </summary>
            <param name="resourceVersionId">The resource version id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetFileStatusDetailsAsync(System.Int32[])">
            <summary>
            The GetFileStatusDetailsAsync.
            </summary>
            <param name="fileIds">The File Ids.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.CreateResourceVersionValidationResultAsync(LearningHub.Nhs.Models.Resource.ResourceVersionValidationResultViewModel)">
            <summary>
            The create resource version validation result async.
            </summary>
            <param name="validationResultViewModel">The validationResultViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ResourceVersionValidationResultViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceHeaderViewModelAsync(System.Int32)">
            <summary>
            The get resource header view model async.
            </summary>
            <param name="resourceReferenceId">The resourceReferenceId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceInformationViewModelAsync(System.Int32)">
            <summary>
            The get resource information view model async.
            </summary>
            <param name="resourceReferenceId">The resourceReferenceId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceItemViewModelAsync(System.Int32)">
            <summary>
            The get resource item view model async.
            </summary>
            <param name="resourceReferenceId">The resourceReferenceId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetCatalogueLocations(System.Int32)">
            <summary>
            The get catalogue locations.
            </summary>
            <param name="resourceReferenceId">The resourceReferenceId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetMyContributionsTotalsAsync(System.Int32)">
            <summary>
            Returns totals for "My Contributions".
            </summary>
            <param name="catalogueId">The catalogueId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetMyContributionsAsync(LearningHub.Nhs.Models.Resource.ResourceDisplay.ResourceContributionsRequestViewModel)">
            <summary>
            Returns Resource Cards for "My Contributions".
            </summary>
            <param name="resourceContributionsRequestViewModel">The resourceContributionsRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ResourceDisplay.ResourceContributionsRequestViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetMyContributions(LearningHub.Nhs.Models.Resource.MyContributionsRequestViewModel)">
            <summary>
            Returns the requested contributions.
            </summary>
            <param name="myContributionsRequestViewModel">The myContributionsRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.MyContributionsRequestViewModel"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetMyResourceViewModelAsync">
            <summary>
            Returns Resource Cards.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceCardExtendedViewModelAsync(System.Int32)">
            <summary>
            Returns Extended Card details for the supplied Id (resourceVersionId).
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.HasPublishedResourcesAsync">
            <summary>
            Returns if the user has published resources.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetFileTypes">
            <summary>
            Get all file types.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SaveFileChunkDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.FileChunkDetailViewModel)">
            <summary>
            The save file chunk detail async.
            </summary>
            <param name="fileChunkDetailCreateRequestViewModel">The fileChunkDetailCreateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileChunkDetailViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetFileChunkDetailAsync(System.Int32)">
            <summary>
            The get file chunk detail async.
            </summary>
            <param name="fileChunkDetailId">The fileChunkDetailId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetFileAsync(System.Int32)">
            <summary>
            The get file async.
            </summary>
            <param name="fileId">The fileId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DeleteFileChunkDetailAsync(LearningHub.Nhs.Models.Resource.Contribute.FileChunkDetailDeleteRequestModel)">
            <summary>
            Delete a file chunk detail async.
            </summary>
            <param name="fileChunkDetailDeleteRequestModel">The fileChunkDetailDeleteRequestModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileChunkDetailDeleteRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SaveFileDetailsAsync(LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel)">
            <summary>
            The save file details async.
            </summary>
            <param name="fileCreateRequestViewModel">The fileCreateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.UpdateFileDetailsAsync(LearningHub.Nhs.Models.Resource.Contribute.FileUpdateRequestViewModel)">
            <summary>
            The update file details async.
            </summary>
            <param name="fileUpdateRequestViewModel">The fileUpdateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileUpdateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SaveArticleAttachedFileDetailsAsync(LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel)">
            <summary>
            The save file details for an article async.
            </summary>
            <param name="fileCreateRequestViewModel">The fileCreateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.SaveResourceAttributeFileDetails(LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel)">
            <summary>
            The save file details for a resource attribute async.
            </summary>
            <param name="fileCreateRequestViewModel">The fileCreateRequestViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.FileCreateRequestViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.AddResourceAzureMediaAssetAsync(LearningHub.Nhs.Models.Resource.AzureMediaAsset.MediaAssetOutputViewModel)">
            <summary>
            Add a new resource azure media asset.
            </summary>
            <param name="mediaAssetOutputViewModel">The mediaAssetOutputViewModel<see cref="T:LearningHub.Nhs.Models.Resource.AzureMediaAsset.MediaAssetOutputViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetMediaAssetInputAsync(System.Int32)">
            <summary>
            Get media asset input resourceVersion by Id.
            </summary>
            <param name="resourceVersionId">The resourceVersionId<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceLicences">
            <summary>
            Get all resource licences.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetResourceAdminSearchFilteredPage(LearningHub.Nhs.Models.Paging.PagingRequestModel)">
            <summary>
            Get a filtered page of User records.
            </summary>
            <param name="pagingRequestModel">The filter<see cref="T:LearningHub.Nhs.Models.Paging.PagingRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.TransferResourceOwnershipAsync(LearningHub.Nhs.Models.Resource.Admin.TransferResourceOwnershipViewModel)">
            <summary>
            Transfer Resource Ownership.
            </summary>
            <param name="transferResourceOwnershipViewModel">The transferResourceOwnershipViewModel<see cref="T:LearningHub.Nhs.Models.Resource.Admin.TransferResourceOwnershipViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.GetAllPublishedResourceAsync">
            <summary>
            Get All published resources id.
            </summary>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceController.DuplicateBlocks(LearningHub.Nhs.Models.Resource.Contribute.DuplicateBlocksRequestModel)">
            <summary>
            DuplicateResourceAsync.
            </summary>
            <param name="duplicateResourceRequestModel">The duplicateResourceRequestModel<see cref="T:LearningHub.Nhs.Models.Resource.Contribute.DuplicateResourceRequestModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ResourceSyncController">
            <summary>
            The ResourceSyncController.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IResourceSyncService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ResourceSyncController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ResourceSyncController"/> class.
            </summary>
            <param name="userService">The userService.</param>
            <param name="resourceSyncService">The resourceSyncService.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.GetResourceSyncs">
            <summary>
            The GetResourceSyncs.
            </summary>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.AddToSyncList(System.Collections.Generic.List{System.Int32})">
            <summary>
            The AddToSyncList.
            </summary>
            <param name="resourceIds">The resourceIds.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.RemoveFromSyncList(System.Collections.Generic.List{System.Int32})">
            <summary>
            The RemoveFromSyncList.
            </summary>
            <param name="resourceIds">The resourceIds.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.SyncWithFindwise">
            <summary>
            The SyncWithFindwise.
            </summary>
            <returns>The action result.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ResourceSyncController.SyncSingle(LearningHub.Nhs.Models.Resource.ResourceAdminSearchResultViewModel)">
            <summary>
            The SyncSingle.
            </summary>
            <param name="vm">The vm.</param>
            <returns>The action result.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.RoadmapController">
            <summary>
            The RoadmapController.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IRoadmapService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.RoadmapController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.RoadmapController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="roadmapService">The roadmap service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.GetUpdates">
            <summary>
            The GetUpdates.
            </summary>
            <returns>The updates.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.GetUpdates(System.Int32)">
            <summary>
            The GetUpdates.
            </summary>
            <param name="numberOfResults">numberOfResults.</param>
            <returns>The updates.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.GetRoadmap(System.Int32)">
            <summary>
            The GetRoadmap.
            </summary>
            <param name="id">The id.</param>
            <returns>The roadmap.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.AddRoadmap(LearningHub.Nhs.Models.Entities.Roadmap)">
            <summary>
            The AddRoadmap.
            </summary>
            <param name="roadmap">The roadmap.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.UpdateRoadmap(LearningHub.Nhs.Models.Entities.Roadmap)">
            <summary>
            The UpdateRoadmap.
            </summary>
            <param name="roadmap">The roadmap.</param>
            <returns>The roadmap id.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.DeleteRoadmap(System.Int32)">
            <summary>
            The DeleteRoadmap.
            </summary>
            <param name="id">The roadmap id.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoadmapController.UpdateOrder(LearningHub.Nhs.Models.Common.RoadmapOrdering)">
            <summary>
            The UpdateOrder.
            </summary>
            <param name="roadmapOrdering">The roadmap ordering.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.RoleController">
            <summary>
            Role operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.RoleController.roleService">
            <summary>
            The role service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IRoleService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.RoleController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.RoleController"/> class.
            </summary>
            <param name="userService">
            The user service.
            </param>
            <param name="roleService">
            The role service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.GetAllRoles">
            <summary>
            Get Roles.
            </summary>
            <returns>List of role including permissions.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.GetAsync(System.Int32,System.Boolean)">
            <summary>
            Get specific Role by Id.
            </summary>
            <param name="id">The id.</param>
            <param name="includePermissions">The include permissions.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.GetAvailableForUserGroupAsync(System.Int32)">
            <summary>
            Get Roles available for User Group.
            </summary>
            <param name="userGroupId">The user group id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.Search(System.String,System.Int32,System.Int32)">
            <summary>
            Search roles.
            </summary>
            <param name="searchText">The search text.</param>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.CreateAsync(LearningHub.Nhs.Models.Entities.Role)">
            <summary>
            The create role async.
            </summary>
            <param name="role">The role.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.PutAsync(LearningHub.Nhs.Models.Entities.Role,System.Boolean)">
            <summary>
            Update an existing Role.
            </summary>
            <param name="role">The role.</param>
            <param name="includePermissions">The include permissions.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.RoleController.DeleteAsync(System.Int32)">
            <summary>
            Delete specific Role by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.ScormContentServerController">
            <summary>
            The ScormContentServerController. Used by the SCORM content server web app to retrieve mappings of ESR links to internal content folders.
            This is separate from the ResourceController because these methods need to be called anonymously via the AuthorizeOrCallFromLH attribute.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.ScormContentServerController.scormContentServerService">
            <summary>
            The scorm content server service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ScormContentServerController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IScormContentServerService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.ScormContentServerController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.ScormContentServerController"/> class.
            </summary>
            <param name="userService">The UserService<see cref="T:LearningHub.Nhs.Services.Interface.IUserService"/>.</param>
            <param name="scormContentServerService">The scormContentServerService<see cref="T:LearningHub.Nhs.Services.Interface.IScormContentServerService"/>.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ScormContentServerController.GetScormContentDetailsByExternalUrl(System.String)">
            <summary>
            The GetScormContentDetailsByEsrLinkUrl.
            </summary>
            <param name="externalUrl">The externalUrl<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ScormContentServerController.GetScormContentDetailsByExternalReference(System.String)">
            <summary>
            The GetScormContentDetailsByExternalIdentifier.
            </summary>
            <param name="externalReference">The externalIdentifier<see cref="T:System.Guid"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.ScormContentServerController.LogScormResourceReferenceEventAsync(LearningHub.Nhs.Models.Resource.ScormResourceReferenceEventViewModel)">
            <summary>
            The LogScormResourceReferenceEventAsync.
            </summary>
            <param name="scormResourceReferenceEventViewModel">The ScormResourceReferenceEventViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ScormResourceReferenceEventViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.SearchController">
            <summary>
            Search operations.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.ISearchService,Microsoft.Extensions.Options.IOptions{LearningHub.Nhs.Api.Shared.Configuration.Settings},Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.SearchController},LearningHub.Nhs.Services.Interface.ICatalogueService,LearningHub.Nhs.Services.Interface.IResourceService,LearningHub.Nhs.Services.Interface.IResourceReferenceService,LearningHub.Nhs.Repository.Interface.IBookmarkRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.SearchController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="searchService">The search service.</param>
            <param name="settings">The settings.</param>
            <param name="logger">The logger.</param>
            <param name="catalogueService">The catalogue service.</param>
            <param name="resourceService">The resource service.</param>
            <param name="resourceReferenceService">The resource reference service.</param>
            <param name="bookmarkRepository">The bookmarkRepository.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.GetResults(LearningHub.Nhs.Models.Search.SearchRequestModel)">
            <summary>
            Get result.
            </summary>
            <param name="searchRequestModel">The search request model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.GetCatalogueResults(LearningHub.Nhs.Models.Search.CatalogueSearchRequestModel)">
            <summary>
            Get result.
            </summary>
            <param name="catalogueSearchRequestModel">
            The catalog search request model.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.SubmitFeedback(LearningHub.Nhs.Models.Search.SearchFeedBackModel)">
            <summary>
            The submit feedback.
            </summary>
            <param name="searchFeedbackModel">The search feedback.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.CreateResourceSearchAction(LearningHub.Nhs.Models.Search.SearchActionResourceModel)">
            <summary>
            Create resoruce search action.
            </summary>
            <param name="searchActionResourceModel">
            The search action resource model.
            </param>
            <returns>
            Nothing.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.CreateCatalogueSearchAction(LearningHub.Nhs.Models.Search.SearchActionCatalogueModel)">
            <summary>
            Create catalogue search action.
            </summary>
            <param name="searchActionCatalogueModel">
            The search action catalogue model.
            </param>
            <returns>
            Nothing.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.CreateSearchTermAction(LearningHub.Nhs.Models.Search.SearchRequestModel)">
            <summary>
            Create search term action.
            </summary>
            <param name="searchRequestModel">The search term action request model.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.CreateCatalogueSearchTermAction(LearningHub.Nhs.Models.Search.CatalogueSearchRequestModel)">
            <summary>
            Create catalogue search term action.
            </summary>
            <param name="catalogueSearchRequestModel">The catalogue search term action request model.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.GetSearchResults(LearningHub.Nhs.Models.Search.SearchRequestModel,LearningHub.Nhs.Models.Search.SearchViewModel)">
            <summary>
            Get search result.
            </summary>
            <param name="searchRequestModel">The search request model.</param>
            <param name="searchViewModel">The search view model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.SearchController.GetCatalogueSearchResults(LearningHub.Nhs.Models.Search.CatalogueSearchRequestModel)">
            <summary>
            Get catalogue search result.
            </summary>
            <param name="catalogueSearchRequestModel">The catalog search request model.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.UserController">
            <summary>
            The log controller.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.UserController.userProfileService">
            <summary>
            The user profile service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IUserProfileService,LearningHub.Nhs.Services.Interface.INotificationService,LearningHub.Nhs.Services.Interface.IUserNotificationService,LearningHub.Nhs.Services.Interface.ISecurityService)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.UserController"/> class.
            </summary>
            <param name="userService">The lh user service.</param>
            <param name="userProfileService">The user profile service.</param>
            <param name="notificationService">The notification service.</param>
            <param name="userNotificationService">The user notification service.</param>
            <param name="securityService">The security service.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetActiveContent">
            <summary>
            The GetActiveContent.
            </summary>
            <returns>The active content.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.AddActiveContent(LearningHub.Nhs.Models.Resource.ActiveContentViewModel)">
            <summary>
            Add active content for the logged in user.
            </summary>
            <param name="activeContentViewModel">The activeContentViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ActiveContentViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.ReleaseActiveContent(LearningHub.Nhs.Models.Resource.ActiveContentReleaseViewModel)">
            <summary>
            Release active content for the logged in user.
            </summary>
            <param name="activeContentReleaseViewModel">The activeContentReleaseViewModel<see cref="T:LearningHub.Nhs.Models.Resource.ActiveContentReleaseViewModel"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetUserProfileAsync(System.Int32)">
            <summary>
            Get specific User Profile by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.CreateUserProfileAsync(LearningHub.Nhs.Models.Entities.UserProfile)">
            <summary>
            Create specific User Profile.
            </summary>
            <param name="userProfile">The userProfile.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.UpdateUserProfileAsync(LearningHub.Nhs.Models.Entities.UserProfile)">
            <summary>
            Update specific User Profile.
            </summary>
            <param name="userProfile">The userProfile.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetByUserIdAsync(System.Int32)">
            <summary>
            Get specific User Profile by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetCurrentUserProfileAsync">
            <summary>
            Get current User Profile.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.CreateUserAsync(LearningHub.Nhs.Models.User.UserCreateViewModel)">
            <summary>
            Create a new user.
            </summary>
            <param name="userCreateViewModel">The userCreateViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.UpdateUserAsync(LearningHub.Nhs.Models.User.UserUpdateViewModel)">
            <summary>
            Create a new user.
            </summary>
            <param name="userUpdateViewModel">The userCreateViewModel.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetLastIssuedEmailChangeValidationToken">
            <summary>
            GetLastIssuedEmailChangeValidationToken.
            </summary>
            <param name="userId">userId.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GenerateEmailChangeValidationTokenAndSendEmail(System.String)">
            <summary>
            Generate email change token.
            </summary>
            <param name="emailAddress">emailAddress.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.ReGenerateEmailChangeValidationToken">
            <summary>
            Regenerate email change token.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.CancelEmailChangeValidationToken">
            <summary>
            Regenerate email change token.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.ValidateEmailChangeTokenAsync(System.String,System.String)">
            <summary>
            Validate email change token.
            </summary>
            <param name="token">
            The token.
            </param>
            <param name="locToken">
            The loc Token.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserController.GetLHUserAdminBasicFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get a filtered page of LH User records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="presetFilter">The preset filter.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.UserGroupController">
            <summary>
            User Group operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.UserGroupController.userGroupService">
            <summary>
            The user group service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IUserGroupService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.UserGroupController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.UserGroupController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="userGroupService">The user group service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetUserGroupAdminDetailById(System.Int32)">
            <summary>
            Returns the UserGroupAdminDetail model for a particular user group id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetUserGroupAdminRoleDetailById(System.Int32)">
            <summary>
            Returns the UserGroupAdminDetail model for a particular user group id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetRoleUserGroupDetailByUserId(System.Int32)">
            <summary>
            Returns the user group - role detail for a particular user  id.
            </summary>
            <param name="userId">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetRoleUserGroupDetail">
            <summary>
            Returns the user group - role detail for a current user  id.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.CreateUserGroupAsync(LearningHub.Nhs.Models.User.UserGroupAdminDetailViewModel)">
            <summary>
            Create a User Group.
            </summary>
            <param name="userGroup">The user group.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.UpdateUserGroup(LearningHub.Nhs.Models.User.UserGroupAdminDetailViewModel)">
            <summary>
            Update an existing User Group.
            </summary>
            <param name="userGroup">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.DeleteUserGroup(LearningHub.Nhs.Models.User.UserGroupAdminBasicViewModel)">
            <summary>
            Delete an existing User Group.
            </summary>
            <param name="userGroup">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.AddUserUserGroups(System.Collections.Generic.List{LearningHub.Nhs.Models.User.UserUserGroupViewModel})">
            <summary>
            Add Users to User Group.
            </summary>
            <param name="userUserGroups">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.AddRoleUserGroups(System.Collections.Generic.List{LearningHub.Nhs.Models.User.RoleUserGroupUpdateViewModel})">
            <summary>
            Add Role - User Group - Scope association.
            </summary>
            <param name="roleUserGroups">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.DeleteUserUserGroupAsync(LearningHub.Nhs.Models.User.UserUserGroupViewModel)">
            <summary>
            Removes User from a User Group.
            </summary>
            <param name="userUserGroupViewModel">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.AddUserGroupAttributeAsync(LearningHub.Nhs.Models.User.UserGroupAttributeViewModel)">
            <summary>
            Add User Group - Attribute.
            </summary>
            <param name="userGroupAttribute">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.DeleteUserGroupAttributeAsync(LearningHub.Nhs.Models.User.UserGroupAttributeViewModel)">
            <summary>
            Removes a User Group Attribute.
            </summary>
            <param name="userGroupAttribute">The user.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.DeleteRoleUserGroupAsync(LearningHub.Nhs.Models.User.RoleUserGroupUpdateViewModel)">
            <summary>
            Removes a Role - User Group.
            </summary>
            <param name="roleUserGroupUpdateViewModel">The roleUserGroupUpdateViewModel.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetUserGroupAdminBasicFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get a filtered page of User records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="presetFilter">The preset filter.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetUserUserGroupAdminFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get a filtered page of User records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="presetFilter">The presetFilter.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetRoleUserGroupAdminFilteredPage(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get a filtered page of role user group records.
            </summary>
            <param name="page">The page.</param>
            <param name="pageSize">The page size.</param>
            <param name="sortColumn">The sort column.</param>
            <param name="sortDirection">The sort direction.</param>
            <param name="presetFilter">The presetFilter.</param>
            <param name="filter">The filter.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.GetAsync(System.Int32,System.Boolean)">
            <summary>
            Get specific UserGroup by Id.
            </summary>
            <param name="id">The id.</param>
            <param name="includeRoles">The include roles.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.CreateAsync(LearningHub.Nhs.Models.Entities.UserGroup)">
            <summary>
            Create a new UserGroup.
            </summary>
            <param name="userGroup">The user group.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserGroupController.DeleteAsync(System.Int32)">
            <summary>
            Delete specific UserGroup by Id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.UserNotificationController">
            <summary>
            UserNotification operations.
            </summary>
        </member>
        <member name="F:LearningHub.Nhs.Api.Controllers.UserNotificationController.usernotificationService">
            <summary>
            The usernotification service.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.#ctor(LearningHub.Nhs.Services.Interface.IUserService,LearningHub.Nhs.Services.Interface.IUserNotificationService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.UserNotificationController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.UserNotificationController"/> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="usernotificationService">The usernotification service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.GetById(System.Int32)">
            <summary>
            Get User Notification record by id.
            </summary>
            <param name="id">The id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.GetPage(LearningHub.Nhs.Models.Paging.PagingRequestModel,LearningHub.Nhs.Models.Enums.NotificationPriorityEnum)">
            <summary>
            Get a page of user notifications.
            </summary>
            <param name="request">Paging request.</param>
            <param name="priorityType">Notification priority type.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.GetUserUnreadNotificationCount(System.Int32)">
            <summary>
            Get User Unread Notifications Count.
            </summary>
            <param name="userid">The userid.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.PutAsync(LearningHub.Nhs.Models.Entities.UserNotification)">
            <summary>
            Update an existing user notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.UserNotificationController.PostAsync(LearningHub.Nhs.Models.Entities.UserNotification)">
            <summary>
            Create a new user notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.VideoController">
            <summary>
            Defines the <see cref="T:LearningHub.Nhs.Api.Controllers.VideoController" />.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.VideoController.#ctor(AutoMapper.IMapper,LearningHub.Nhs.Repository.Interface.Resources.IVideoFileRepository,LearningHub.Nhs.Services.Interface.IUserService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.VideoController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.VideoController"/> class.
            </summary>
            <param name="mapper">
            The Automapper.
            </param>
            <param name="videoFileRepository">
            The Video File Repository.
            </param>
            <param name="userService">
            The user service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.VideoController.GetVideoFileDetailsByFileId(System.Int32)">
            <summary>
            Get video file details by FileId (NOT by VideoFileId).
            This endpoint is used by the AzureFunctions video service to get the VideoFile.
            </summary>
            <param name="fileId">The video's FileId.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.VideoController.SaveVideoDetails(System.Int32,LearningHub.Nhs.Models.Resource.Files.VideoFileViewModel)">
            <summary>
            Saves details about the video.
            </summary>
            <param name="fileId">The video's File ID.</param>
            <param name="viewModel">The video details.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Controllers.WholeSlideImageController">
            <summary>
            Defines the <see cref="T:LearningHub.Nhs.Api.Controllers.WholeSlideImageController" />.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.WholeSlideImageController.#ctor(LearningHub.Nhs.Repository.Interface.Resources.IFileRepository,AutoMapper.IMapper,LearningHub.Nhs.Repository.Interface.Resources.IWholeSlideImageFileRepository,Microsoft.Extensions.Options.IOptions{LearningHub.Nhs.Api.Shared.Configuration.Settings},LearningHub.Nhs.Services.Interface.IUserService,Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Controllers.WholeSlideImageController})">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Controllers.WholeSlideImageController"/> class.
            </summary>
            <param name="fileRepository">
            The File Repository.
            </param>
            <param name="mapper">
            The Automapper.
            </param>
            <param name="wholeSlideImageFileRepository">
            The Whole Slide Image File Repository.
            </param>
            <param name="settings">
            The Settings.
            </param>
            <param name="userService">
            The user service.
            </param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Controllers.WholeSlideImageController.SaveWholeSlideImageDetails(System.Int32,LearningHub.Nhs.Models.Resource.Files.WholeSlideImageFileViewModel)">
            <summary>
            Saves details about the whole slide image.
            </summary>
            <param name="fileId">The whole slide image's File ID.</param>
            <param name="viewModel">The whole slide image details.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Helpers.QuerystringHelper">
            <summary>
            The querystring helper.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Helpers.QuerystringHelper.DecodeParameter(System.String)">
            <summary>
            The decode parameter.
            </summary>
            <param name="parameter">
            The parameter.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Middleware.ExceptionMiddleware">
            <summary>
            The exception middleware.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Middleware.ExceptionMiddleware.#ctor(Microsoft.Extensions.Logging.ILogger{LearningHub.Nhs.Api.Middleware.ExceptionMiddleware},Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Middleware.ExceptionMiddleware"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="hostingEnv">The hosting env.</param>
            <param name="next">The next.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Middleware.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            The invoke.
            </summary>
            <param name="context">The context.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:LearningHub.Nhs.Api.Middleware.ExceptionMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            The handle exception async.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.Middleware.NLogMiddleware">
            <summary>
            Defines the <see cref="T:LearningHub.Nhs.Api.Middleware.NLogMiddleware" />.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.Middleware.NLogMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningHub.Nhs.Api.Middleware.NLogMiddleware"/> class.
            Constructor.
            </summary>
            <param name="next">next.</param>
        </member>
        <member name="M:LearningHub.Nhs.Api.Middleware.NLogMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Process the Request and Catch Exceptions.
            </summary>
            <param name="context">context.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:LearningHub.Nhs.Api.ServiceCollectionExtension">
            <summary>
            ServiceCollectionExtension.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.ServiceCollectionExtension.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            ConfigureServices.
            </summary>
            <param name="services">IServiceCollection.</param>
            <param name="configuration">IConfiguration.</param>
        </member>
        <member name="T:LearningHub.Nhs.Api.ServiceMappings">
            <summary>
            Extension class for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> service mappings.
            </summary>
        </member>
        <member name="M:LearningHub.Nhs.Api.ServiceMappings.AddLearningHubMappings(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            The add learning hub mappings.
            </summary>
            <param name="services">The services.</param>
            <param name="configuration">The configuration.</param>
        </member>
    </members>
</doc>
