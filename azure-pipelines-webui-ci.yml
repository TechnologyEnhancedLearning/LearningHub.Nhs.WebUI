# Variable Group 'UAT - Variable Group' was defined in the Variables tab
variables:
- name: BuildParameters.RestoreBuildProjects
  value: '**/*.csproj'
- name: BuildParameters.TestProjects
  value: '**/*[Tt]ests/*.csproj'
trigger:
  branches:
    include:
    - refs/heads/RC
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/CI
jobs:
- job: Job_1
  displayName: Agent job
  pool:
    vmImage: windows-latest
  steps:
  - checkout: self
    clean: true
    fetchTags: true
  - task: NodeTool@0
    displayName: Use Node 12.19 (otherwise node-sass 4.13 will error - Azure build agent defaults to v14.15 which is incompatible)
    inputs:
      versionSpec: 12.19
  - task: Npm@1
    displayName: npm custom
    inputs:
      command: custom
      workingDir: LearningHub.Nhs.WebUI
      verbose: false
      customCommand: install -f
  - task: Npm@1
    displayName: run webpack build
    inputs:
      command: custom
      workingDir: LearningHub.Nhs.WebUI
      verbose: false
      customCommand: run build
  - task: NuGetToolInstaller@1
    displayName: Use NuGet 5.8
    inputs:
      versionSpec: 5.8
  - task: NuGetCommand@2
    displayName: NuGet restore
    inputs:
      feedRestore: d99eaf2c-ad74-4a35-876e-f7dc1e45a604
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: $(BuildParameters.RestoreBuildProjects)
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: $(BuildParameters.RestoreBuildProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Test
    enabled: False
    inputs:
      command: test
      projects: $(BuildParameters.TestProjects)
      arguments: --configuration $(BuildConfiguration)
  - task: DotNetCoreCLI@2
    displayName: Publish WebUI
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/*LearningHub.Nhs.WebUI.csproj'
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/WebUI
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact WebUI
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/WebUI
      ArtifactName: WebUI
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - task: DotNetCoreCLI@2
    displayName: Publish AdminUI
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/*LearningHub.Nhs.AdminUI.csproj'
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/AdminUI
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact AdminUI
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/AdminUI
      ArtifactName: AdminUI
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - task: DotNetCoreCLI@2
    displayName: Publish WebAPI
    inputs:
      command: publish
      publishWebProjects: false
      projects: '**/*LearningHub.Nhs.Api.csproj'
      arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/WebAPI
      zipAfterPublish: True
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact WebAPI '
    condition: succeededOrFailed()
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/WebAPI
      ArtifactName: WebAPI
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
...
